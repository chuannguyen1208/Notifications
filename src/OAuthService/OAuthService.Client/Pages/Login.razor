@page "/login"
@rendermode InteractiveWebAssembly
@inject AuthService AuthService

<h3>Login</h3>

<div class="row">
    <div class="col-4">
        @if (isSubmitSuccessful is bool success)
        {
            <div class="alert @(success ? "alert-success" : "alert-error")" role="alert">
                Registration @(success ? "successful" : "failed")!
            </div>
        }

        <EditForm Model="@Model" OnValidSubmit="Submit" FormName="login-form">
            <DataAnnotationsValidator />

            <div class="form-group">
                <InputText @bind-Value="Model!.Email" placeholder="Email" class="form-control mb-3" />
                <ValidationMessage For="@(() => Model.Email)" />
            </div>

            <div class="form-group">
                <InputText type="password" @bind-Value="Model.Password" placeholder="Password" class="form-control mb-3" />
                <ValidationMessage For="@(() => Model.Password)" />
            </div>

            <button type="submit" class="btn btn-primary">Register</button>
        </EditForm>
    </div>
</div>


@code {
    [SupplyParameterFromForm]
    public LoginModel? Model { get; set; }

    private bool? isSubmitSuccessful;

    protected override void OnInitialized() => Model ??= new();

    private async Task Submit()
    {
        isSubmitSuccessful = await AuthService.LoginAsync(Model!.Email!, Model.Password!);
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required")]
        public string? Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        public string? Password { get; set; }
    }
}
