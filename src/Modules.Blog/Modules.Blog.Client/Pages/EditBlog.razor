@page "/blogs/0"
@page "/blogs/{Id:int}"
@inject HttpClient Http

<style>
    .background-image {
        background-image: url('img/cover.jpg');
        background-size: cover;
        background-position: center;
    }

    .bg-transparent-gray {
        background-color: rgba(128, 128, 128, 0.5);
    }

    .cs-input {
        background: transparent;
        border: none;
        padding: 8px;
        color: #fff;
    }

        .cs-input::placeholder {
            color: #fff;
        }

        .cs-input:focus {
            outline: none;
            background: none;
            box-shadow: none;
            color: #fff;
            border: 1px dashed #ccc;
        }
</style>

<PageTitle>@(Id != 0 ? "Edit" : "New blog")</PageTitle>

<div class="px-3 background-image">
    <div class="row d-flex align-items-center py-3">
        <div class="col-md-6">
            <button class="btn btn-primary" @onclick="Publish">Publish</button>
            <button class="btn btn-secondary" @onclick="Save">Save</button>
        </div>
    </div>
    <div class="row py-2">
        <div class="col-md-12">
            <div class="form-group">
                <InputText id="Title" class="form-control cs-input" placeholder="Post title" style="font-size: 1.2rem" @bind-Value="Blog.Title" />
            </div>
        </div>
    </div>
</div>
<div class="row mt-3">
    <div class="col-md-12">
        <div class="form-group">
            <InputTextArea id="Description" class="form-control" placeholder="Content" @bind-Value="Blog.Description" />
        </div>
    </div>
</div>


@code {
    [Parameter]
    public int Id { get; set; }

    EditBlogDto Blog = new()
        {
            Title = ""
        };

    protected override void OnParametersSet()
    {
        Blog.Id = Id;
    }

    async Task Save()
    {
        Console.WriteLine("Save");
        await Task.CompletedTask;
    }

    async Task Publish()
    {
        await Save();
    }
}
