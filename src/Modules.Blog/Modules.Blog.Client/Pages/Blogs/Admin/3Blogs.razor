@page "/adm/blogs"
@rendermode InteractiveServer
@layout BlogsAdmLayout
@inject IBlogsService _blogsService
@inject NavigationManager nav

<ul class="list-group">
    <li class="list-group-item border-0">
        <div class="d-flex align-items-center">
            <a class="btn btn-primary btn-md rounded-pill px-4 py-2 btn-new-post" href="adm/blog/0">New Post</a>
        </div>
    </li>
    @foreach (var blog in blogs)
    {
        <li class="list-group-item border-0">
            <div class="form-check d-flex align-items-center justify-content-between">
                <div style="width: 200px">
                    <input class="form-check-input" type="checkbox">
                    <label class="form-check-label ms-3">
                        @blog.Title
                    </label>
                </div>
                <div>
                    <span>@blog.Created.ToString("MMM d, yyyy")</span>
                </div>
                <div>
                    <a class="nav-item" href="@blog.Id">
                        <i class="bi bi-eye fs-5" />
                    </a>
                    <a class="nav-item ms-3" href="@($"adm/blog/{blog.Id}")">
                        <i class="bi bi-pencil fs-5" />
                    </a>
                    <MyComps.AuthorizeComp>
                        <a class="nav-item ms-3 cursor-pointer" @onclick="(e) => DeleteBlog(e, blog.Id)" @onclick:preventDefault>
                            <i class="bi bi-trash fs-5" />
                        </a>
                    </MyComps.AuthorizeComp>
                </div>
            </div>
        </li>
    }
</ul>

@code {
    IEnumerable<BlogDto> blogs = [];

    protected override async Task OnInitializedAsync()
    {
        await GetBlogs();
    }

    async Task DeleteBlog(EventArgs e, int id)
    {
        await _blogsService.DeleteAsync(id);
        await GetBlogs();
    }

    async Task GetBlogs()
    {
        blogs = await _blogsService.GetBlogsAsync();
    }
}
