@page "/adm/blog/{Id:int}"
@rendermode InteractiveServer
@layout BlogsAdmLayout
@inject IBlogsService BlogsService
@inject NavigationManager Navigation
@inject IToastService toast

<PageTitle>@(Id > 0 ? "Edit" : "New blog")</PageTitle>
@if (loading)
{
    <div>Loading...</div>
}
else
{
    <div class="px-3 background-image">
        <div class="row d-flex align-items-center py-3">
            <div class="col-md-6">
                <button class="btn btn-primary" @onclick="Publish">Publish</button>
                <button class="btn btn-secondary" @onclick="Save">Save</button>
            </div>
        </div>
        <div class="row py-2">
            <div class="col-md-12">
                <div class="form-group">
                    <input class="form-control cs-input fs-4" placeholder="Post title" autofocus @bind-value="Blog.Title" />
                </div>
            </div>
            <div class="col-md-12 mt-1">
                <div class="form-group">
                    <input class="form-control cs-input fs-6" placeholder="Description" @bind-value="Blog.Description" />
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-md-12">
            <div class="form-group">
                <MyComps.EasyMdeEditor @ref="_editor" Content="@Blog.Content"></MyComps.EasyMdeEditor>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int? Id { get; set; }
    MyComps.EasyMdeEditor _editor = default!;
    private bool loading = true;

    EditBlogDto Blog = new()
    {
        Id = 0,
        Title = ""
    };

    protected override async Task OnInitializedAsync()
    {
        if (Id is int id && id != 0)
        {
            var blog = await BlogsService.GetBlogAsync(id);
            Blog = blog;
        }

        loading = false;
    }


    async Task Save()
    {
        try
        {
            var content = await _editor.GetContentAsync();
            Blog.Content = content;
            await BlogsService.EditBlogAsync(Blog);
            Navigation.NavigateTo("adm");
        }
        catch (Exception ex)
        {
            var message = ex.Message;
            await toast.ToastError(message);
        }

    }

    async Task Publish()
    {
        Blog.Published = true;
        await Save();
    }
}
