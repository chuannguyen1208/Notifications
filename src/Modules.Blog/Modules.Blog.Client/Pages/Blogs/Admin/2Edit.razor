@page "/adm/blog/{Id:int}"
@using Modules.Blog.Client.Layout
@using Modules.Blog.Shared
@rendermode InteractiveWebAssembly
@layout BlogsAdmLayout
@inject BlogsService BlogsService
@inject NavigationManager Navigation

<PageTitle>@(Id > 0 ? "Edit" : "New blog")</PageTitle>

<div class="px-3 background-image">
    <div class="row d-flex align-items-center py-3">
        <div class="col-md-6">
            <button class="btn btn-primary" @onclick="Publish">Publish</button>
            <button class="btn btn-secondary" @onclick="Save">Save</button>
        </div>
    </div>
    <div class="row py-2">
        <div class="col-md-12">
            <div class="form-group">
                <input class="form-control cs-input fs-4" placeholder="Post title" autofocus @bind-value="Blog.Title" />
            </div>
        </div>
        <div class="col-md-12 mt-1">
            <div class="form-group">
                <input class="form-control cs-input fs-6" placeholder="Description" @bind-value="Blog.Description" />
            </div>
        </div>
    </div>
</div>
<div class="row mt-3">
    <div class="col-md-12">
        <div class="form-group">
            <MyComps.EasyMdeEditor @ref="_editor"></MyComps.EasyMdeEditor>
        </div>
    </div>
</div>

@code {
    [Parameter] public int? Id { get; set; }
    MyComps.EasyMdeEditor _editor = default!;


    EditBlogDto Blog = new()
    {
        Title = ""
    };

    protected override void OnParametersSet()
    {
        Blog.Id = Id ?? 0;
    }

    async Task Save()
    {
        var content = await _editor.GetContentAsync();
        Blog.Content = content;
        await BlogsService.EditBlogAsync(Blog);
        Navigation.NavigateTo("adm");
    }

    async Task Publish()
    {
        Blog.Published = true;
        await Save();
    }
}
